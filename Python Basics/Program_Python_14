Question 1:
Define a class with a generator which can iterate the numbers, which are divisible by 7, between a given range 0 and n.
Answer:
class DivisibleBySevenGenerator:
    def __init__(self, n):
        self.n = n
    def generate_divisible(self):
        for num in range(self.n + 1):
            if num % 7 == 0:
                yield num
n = int(input("Enter a number: "))
generator = DivisibleBySevenGenerator(n)
for divisible_num in generator.generate_divisible():
    print(divisible_num, end=' ')

Question 2:
Write a program to compute the frequency of the words from the input. The output should output after sorting the key alphanumerically. 
Suppose the following input is supplied to the program:
New to Python or choosing between Python 2 and Python 3? Read Python 2 or Python 3.
Then, the output should be:
2:2
3.:1
3?:1
New:1
Python:5
Read:1
and:1
between:1
choosing:1
or:2
to:1

Answer:
input_text = input("Enter a sentence: ")
words = input_text.split()
word_frequency = {}
for word in words:
    word_frequency[word] = word_frequency.get(word, 0) + 1
sorted_frequency = sorted(word_frequency.items())
for word, freq in sorted_frequency:
    print(f"{word}:{freq}")

Question 3:



Define a class Person and its two child classes: Male and Female. All classes have a method "getGender" which can print "Male" for Male class and "Female" for Female class.

Answer:
class Person:
    def getGender(self):
        return "Unknown"
class Male(Person):
    def getGender(self):
        return "Male"
class Female(Person):
    def getGender(self):
        return "Female"
person = Person()
male = Male()
female = Female()

print(person.getGender())
print(male.getGender())
print(female.getGender())

Question 4:
Please write a program to generate all sentences where subject is in ["I", "You"] and verb is in ["Play", "Love"] and the object is in ["Hockey","Football"].

Answer:
subjects = ["I", "You"]
verbs = ["Play", "Love"]
objects = ["Hockey", "Football"]
sentences = [f"{subject} {verb} {obj}" for subject in subjects for verb in verbs for obj in objects]
for sentence in sentences:
    print(sentence)

Question 5:
Please write a program to compress and decompress the string "hello world!hello world!hello world!hello world!".

Answer:
import zlib
input_string = "hello world!hello world!hello world!hello world!"
compressed_data = zlib.compress(input_string.encode())
decompressed_data = zlib.decompress(compressed_data)
print("Compressed Data:", compressed_data)
print("Decompressed Data:", decompressed_data.decode())

Question 6:
Please write a binary search function which searches an item in a sorted list. The function should return the index of element to be searched in the list.

Answer:
def binary_search(arr, target):
    left, right = 0, len(arr) - 1
    while left <= right:
        mid = (left + right) // 2
        if arr[mid] == target:
            return mid
        elif arr[mid] < target:
            left = mid + 1
        else:
            right = mid - 1
    return -1
sorted_list = [1, 3, 5, 7, 9, 11, 13, 15]
item_to_search = int(input("Enter the item to search: "))
index = binary_search(sorted_list, item_to_search)
if index != -1:
    print(f"Item found at index {index}")
else:
    print("Item not found")
