1.How many seconds are in an hour? Use the interactive interpreter as a calculator and multiply the number of seconds in a minute (60) by the number of minutes in an hour (also 60). sol. 60 
Answer:
There are 3600 seconds in an hour (60 seconds/minute * 60 minutes/hour).

2. Assign the result from the previous task (seconds in an hour) to a variable called seconds_per_hour.
Answer:
seconds_per_hour = 3600

3. How many seconds do you think there are in a day? Make use of the variables seconds per hour and minutes per hour.
Answer:
There are 86,400 seconds in a day (3600 seconds/hour * 24 hours/day).

4. Calculate seconds per day again, but this time save the result in a variable called seconds_per_day
Answer:
seconds_per_day = 86400

5. Divide seconds_per_day by seconds_per_hour. Use floating-point (/) division.
Answer:
seconds_per_day / seconds_per_hour results in 24.0, as it uses floating-point division.

6. Divide seconds_per_day by seconds_per_hour, using integer (//) division. Did this number agree with the floating-point value from the previous question, aside from the final .0?
Answer:
seconds_per_day // seconds_per_hour also results in 24, which is the integer division of seconds_per_day by seconds_per_hour. The result agrees with the floating-point value from the previous question, except for the absence of the decimal point and trailing zero.

7. Write a generator, genPrimes, that returns the sequence of prime numbers on successive calls to its next() method: 2, 3, 5, 7, 11, ...
Answer:
Below is the generator function `genPrimes` that returns the sequence of prime numbers on successive calls to its `next()` method:
def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n ** 0.5) + 1):
        if n % i == 0:
            return False
    return True

def genPrimes():
    num = 2
    while True:
        if is_prime(num):
            yield num
        num += 1
