1.	Write a Python program to Extract Unique values dictionary values?
Answer:
def unique_values_from_dict(dictionary):
    unique_values = set()
    for values in dictionary.values():
        unique_values.update(values)
    return list(unique_values)
input_dict = {
    'a': [1, 2, 3],
    'b': [2, 3, 4],
    'c': [4, 5, 6]
}
result = unique_values_from_dict(input_dict)
print("Unique values from dictionary values:", result)

2.	Write a Python program to find the sum of all items in a dictionary?
Answer:
def sum_of_items(dictionary):
    return sum(dictionary.values())
input_dict = {
    'a': 10,
    'b': 20,
    'c': 30
}
result = sum_of_items(input_dict)
print("Sum of all items in the dictionary:", result)

3.	Write a Python program to Merging two Dictionaries?
Answer:
def merge_dictionaries(dict1, dict2):
    merged_dict = {**dict1, **dict2}
    return merged_dict
dict1 = {'a': 10, 'b': 20}
dict2 = {'c': 30, 'd': 40}
merged = merge_dictionaries(dict1, dict2)
print("Merged dictionary:", merged)

4.	Write a Python program to convert key-values list to flat dictionary?
Answer:
def list_to_flat_dict(key_value_list):
    flat_dict = {}
    for key, value in key_value_list:
        flat_dict[key] = value
    return flat_dict
key_value_list = [('a', 10), ('b', 20), ('c', 30)]
flat_dict = list_to_flat_dict(key_value_list)
print("Flat dictionary:", flat_dict)

5.	Write a Python program to insertion at the beginning in OrderedDict?
Answer:
from collections import OrderedDict
def insert_at_beginning(ordered_dict, key, value):
    ordered_dict.move_to_end(key, last=False)
    ordered_dict[key] = value
ordered_dict = OrderedDict([('a', 10), ('b', 20), ('c', 30)])
insert_at_beginning(ordered_dict, 'd', 40)
print("OrderedDict after insertion at the beginning:", ordered_dict)

6.	Write a Python program to check order of character in string using OrderedDict()?
Answer:
from collections import OrderedDict

def check_order(input_string, pattern):
    ordered_dict = OrderedDict.fromkeys(pattern)
    j = 0
    for char in input_string:
        if char == pattern[j]:
            j += 1
        if j == len(pattern):
            return True
    return False
string = input("Enter a string: ")
pattern = input("Enter the pattern to check: ")
if check_order(string, pattern):
    print(f"The order of characters in '{pattern}' is maintained in '{string}'")
else:
    print(f"The order of characters in '{pattern}' is not maintained in '{string}'")

7.	Write a Python program to sort Python Dictionaries by Key or Value?
Answer:
def sort_dict_by_key(dictionary):
    return dict(sorted(dictionary.items()))
def sort_dict_by_value(dictionary):
    return dict(sorted(dictionary.items(), key=lambda item: item[1]))
input_dict = {'b': 20, 'a': 10, 'c': 30}
sorted_by_key = sort_dict_by_key(input_dict)
sorted_by_value = sort_dict_by_value(input_dict)
print("Dictionary sorted by key:", sorted_by_key)
print("Dictionary sorted by value:", sorted_by_value)
