1. To what does a relative path refer?
Answer:
A relative path refers to the location of a file or directory relative to the current working directory. It does not start with the root directory and is based on the context of the current location.

2. What does an absolute path start with your operating system?
Answer:
An absolute path on most operating systems starts with the root directory. For example, on Windows, it starts with a drive letter (e.g., C:\), and on Unix-like systems, it starts with a forward slash (e.g., /).

3. What do the functions os.getcwd() and os.chdir() do?
Answer:
os.getcwd() returns the current working directory, which is the directory where the Python script is currently running. os.chdir() is used to change the current working directory to the specified path.

4. What are the . and .. folders?
Answer:
The ‘.’ (dot) folder represents the current directory, and the ‘..’ (dot-dot) folder represents the parent directory of the current directory.

5. In C:\bacon\eggs\spam.txt, which part is the dir name, and which part is the base name?
Answer:
In C:\bacon\eggs\spam.txt, the C:\bacon\eggs part is the directory name (the path of the folder), and the `spam.txt` part is the base name (the name of the file).

6. What are the three “mode” arguments that can be passed to the open() function?
Answer:
The three "mode" arguments that can be passed to the open() function are:
   - 'r': Read mode (default). Opens a file for reading.
   - 'w': Write mode. Opens a file for writing. If the file already exists, it truncates the file. If it does not exist, it creates a new file.
   - 'a': Append mode. Opens a file for writing, but appends the new data to the end of the file instead of truncating it.

7. What happens if an existing file is opened in write mode?
Answer:
If an existing file is opened in write mode ('w'), the file is truncated, meaning all its contents are deleted, and it becomes an empty file. If the file does not exist, a new file is created.
8. How do you tell the difference between read() and readlines()?
Answer:
read() reads the entire contents of a file as a single string, while readlines() reads the contents of the file line by line and returns a list of lines.

9. What data structure does a shelf value resemble?
Answer:
A shelf value in Python resembles a dictionary-like data structure that stores key-value pairs. It is provided by the `shelve` module and allows you to persistently store and retrieve data in a file. It acts like a persistent dictionary, with keys and values that are stored and retrieved using file I/O operations.
